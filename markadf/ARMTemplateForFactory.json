{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "markadf"
		},
		"OutputAzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OutputAzureBlobStorage1'"
		},
		"markamazingmartAzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'markamazingmartAzureBlobStorage1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"OrderBreakDown": {},
									"ListofOrders": {},
									"SalesTarget": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazingMartListofOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "markamazingmartAzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "ListOfOrders",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "P1-AmazingMartEU2.xlsx",
						"container": "markinput"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Ship Date",
						"type": "String"
					},
					{
						"name": "Ship Mode",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/markamazingmartAzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazingMartOrderBreakdown')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "markamazingmartAzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "OrderBreakdown",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "P1-AmazingMartEU2.xlsx",
						"container": "markinput"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Product Name",
						"type": "String"
					},
					{
						"name": "Discount",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/markamazingmartAzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazingMartSalesTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "markamazingmartAzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SalesTargets",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "P1-AmazingMartEU2.xlsx",
						"container": "markinput"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Month of Order Date",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Target",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/markamazingmartAzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OutputAzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "markoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OutputAzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputAzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('OutputAzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/markamazingmartAzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('markamazingmartAzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AmazingMartOrderBreakdown",
								"type": "DatasetReference"
							},
							"name": "OrderBreakDown"
						},
						{
							"dataset": {
								"referenceName": "AmazingMartListofOrders",
								"type": "DatasetReference"
							},
							"name": "ListofOrders"
						},
						{
							"dataset": {
								"referenceName": "AmazingMartSalesTarget",
								"type": "DatasetReference"
							},
							"name": "SalesTarget"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Output",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "source(output(\n\t\t{Order ID} as string,\n\t\t{Product Name} as string,\n\t\tDiscount as decimal(10,0) '000,000,000.000',\n\t\tSales as decimal(10,0),\n\t\tProfit as decimal(10,0),\n\t\tQuantity as string,\n\t\tCategory as string,\n\t\t{Sub-Category} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> OrderBreakDown\nsource(output(\n\t\t{Order ID} as string,\n\t\t{Order Date} as date,\n\t\t{Customer Name} as string,\n\t\tCity as string,\n\t\tCountry as string,\n\t\tRegion as string,\n\t\tSegment as string,\n\t\t{Ship Date} as date,\n\t\t{Ship Mode} as string,\n\t\tState as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> ListofOrders\nsource(output(\n\t\t{Month of Order Date} as date,\n\t\tCategory as string,\n\t\tTarget as decimal(10,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> SalesTarget\nOrderBreakDown, ListofOrders join(OrderBreakDown@{Order ID} == ListofOrders@{Order ID},\n\tjoinType:'inner',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> Join1\nJoin1 sort(asc(OrderBreakDown@{Order ID}, true),\n\tcaseInsensitive: true,\n\tpartitionBy('hash', 1)) ~> Sort1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AmazingMartOrderBreakdown')]",
				"[concat(variables('factoryId'), '/datasets/AmazingMartListofOrders')]",
				"[concat(variables('factoryId'), '/datasets/AmazingMartSalesTarget')]",
				"[concat(variables('factoryId'), '/datasets/Output')]"
			]
		}
	]
}